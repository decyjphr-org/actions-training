# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test -- -u
    - uses: actions/upload-artifact@v3
      with:
        name: webpack artifacts
        path: public/
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image Locally
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags:  |
            yadhav/tic-tac-toe:latest
    - name: Inspect the Docker Image
      run: |
        docker image inspect yadhav/tic-tac-toe:latest
    - name: Run Functional Tests
      id: functionaltest
      run: |
          docker run -d -p 80:80 yadhav/tic-tac-toe:latest
          sleep 5
          curl http://localhost:80
    #- name: Tag a final release 
    #  id: finalrelease
    #  uses: actionsdesk/semver@0.6.0-rc.8
    #  with:
    #    bump: final
    - name: Push Docker Image
      if: ${{ success() }}
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags:  |
            yadhav/tic-tac-toe:latest  

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: webpack artifacts
          path: public
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload public folder that is generated by the build
          path: 'public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
